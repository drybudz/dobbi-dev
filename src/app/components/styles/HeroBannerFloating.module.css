/* components/styles/HeroBannerFloating.module.css */

.HeroBannerContainer {
    position: relative;
    width: 100vw; /* Always touching sides */
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
    background-color: #000;
    color: #fff;
    /* margin: 80px 0; */
    /* margin: 3% 0; */
}

.title {
    font-size: 80px; /* Desktop font size */
    line-height: 100%;
    letter-spacing: -3.44px;
    font-weight: 700;
    text-align: center;
    z-index: 10; /* Ensure title is on top of all images */
    position: relative;
    text-wrap: balance;
    margin: 0;
    padding: 0;
    top: -70px;
}

.scrollArrow {
    position: absolute;
    bottom: 120px;
    left: 50%;
    transform: translateX(-50%);
    cursor: pointer;
    z-index: 10;
    /* opacity: 0.7; */
    transition: opacity 0.3s ease;
}

.scrollArrow:hover {
    opacity: 1;
}

.noImages {
  height: 100vh; /* Enforce full viewport height */
  display: flex;
  justify-content: center;
  align-items: center; /* Reinforce vertical centering */
}

.noImages .floatingImagesGrid {
  display: none; /* Hide grid when no images */
}

.floatingImagesGrid {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%; /* Spans full width */
    height: 100%; /* Spans full height */
    display: grid;
    /* Desktop: 6 rows, 7 columns */
    grid-template-columns: repeat(7, 52px); /* 7 columns, each 52px wide */
    grid-template-rows: repeat(6, 92px);   /* 6 rows, each 92px high */
    gap: 60px 110px; /* row-gap 60px, column-gap 150px */
    justify-content: space-around; /* Distribute items horizontally */
    align-content: space-around; /* Distribute items vertically */
    opacity: 0.7; /* Default opacity */
    pointer-events: none;
    /* Removed padding to ensure it touches sides */
}


.floatingImage {
    /* Next.js Image's width and height props will define its intrinsic size. */
    /* object-fit: cover will make it fill its assigned grid cell area while maintaining aspect ratio */
    object-fit: cover;
    /* No need for width/height here as they are set via props in JSX and handled by Next/Image */
}
/* ? Remove this one above? k.: */

/* Responsive Adjustments */

/* Tablet and Smaller Desktop */
@media (max-width: 1024px) {
    .title {
        font-size: 70px; /* Adjust as needed for tablets */
        letter-spacing: -3.5px;
        z-index: 3; /* Ensure title is on top of all images */
    }
    .floatingImagesGrid {
        /* Adjust for tablet if different from desktop, otherwise keep desktop values */
        grid-template-columns: repeat(6, 52px); /* Slightly fewer columns */
        grid-template-rows: repeat(5, 92px); /* Slightly fewer rows */
        gap: 50px 100px; /* Slightly smaller gaps */
    }
    .scrollArrow {
        bottom: 15px;
        width: 50px !important;
        height: 25px !important;
    }
}

/* Mobile (<= 576px breakpoint) */
@media (max-width: 576px) {
  .title {
    z-index: 10;
    font-size: 45px;
    letter-spacing: -2.44px;
  }
  .HeroBannerContainer {
    min-height: 70vh; /* Adjust for mobile */
  }
  .floatingImagesGrid {
    grid-template-columns: repeat(5, 52px);
    grid-template-rows: repeat(auto-fit, 92px);
    gap: 30px 60px;
  }
  .noImages {
    height: 100vh; /* Match mobile height */
  }
  .scrollArrow {
    bottom: 10px;
    width: 40px !important;
    height: 20px !important;
  }
}

/* Ensure the grid takes full width even if content doesn't perfectly fill it */
/* This can be achieved by `justify-content: space-between` or `space-around` on the grid container */
/* We're using `space-around` to distribute the gaps somewhat evenly. */